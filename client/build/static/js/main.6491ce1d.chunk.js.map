{"version":3,"sources":["context/AuthContext.js","hooks/http.hook.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailsPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailsPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","onClick","disabled","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6491ce1d.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n});","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback (async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n          if (body) {\r\n              body = JSON.stringify(body);\r\n              headers['Content-Type'] = 'application/json';\r\n          }\r\n\r\n          const response = await fetch(url, {method, body, headers});\r\n          const data = await response.json();\r\n\r\n          if (!response.ok) {\r\n              throw new Error(data.message || 'Что-то пошло не так')\r\n          }\r\n\r\n          setLoading(false);\r\n\r\n          return data;\r\n\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError}\r\n};","import React from 'react';\r\n\r\nexport const Loader = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '2rem' }}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) {\r\n        return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Оригинальная</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            { links.map((link, index) => {\r\n                return (\r\n                    <tr key={link._id}>\r\n                        <td>{ index + 1}</td>\r\n                        <td>{ link.from }</td>\r\n                        <td>{ link.to }</td>\r\n                        <td>\r\n                            <Link to={`/detail/${link._id}`}> Открыть </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n\r\n            </tbody>\r\n        </table>\r\n    )\r\n};","import React, {useState, useContext, useCallback, useEffect} from 'react'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinksList} from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n    const [links, setLinks] = useState([]);\r\n    const {loading, request} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n    \r\n    const fetchLinks = useCallback(async () => {\r\n       try {\r\n           const fetched = await request('/api/link', 'GET', null, {\r\n               Authorization: `Bearer ${token}`\r\n           });\r\n\r\n           setLinks(fetched)\r\n       } catch (e) {\r\n           \r\n       }\r\n    }, [token, request]);\r\n\r\n    useEffect(() => {\r\n        fetchLinks()\r\n    }, [fetchLinks]);\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!loading && <LinksList links={links}/>}\r\n        </div>\r\n    )\r\n};","import React, {useEffect, useState, useContext} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const {request} = useHttp();\r\n    const [link, setLink] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, []);\r\n\r\n    const pressHandler = async event => {\r\n        if (event.key === \"Enter\") {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                });\r\n                history.push(`/detail/${data.link._id}`);\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem'}}>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        placeholder=\"Ссылка\"\r\n                        id=\"link\"\r\n                        type=\"text\"\r\n                        value={link}\r\n                        onChange={e => setLink(e.target.value)}\r\n                        onKeyPress={pressHandler}\r\n                    />\r\n\r\n                    <label htmlFor=\"link\">Введитие ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <div>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n            <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </div>\r\n    )\r\n};","import React, {useState, useCallback, useContext, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\nexport const DetailsPage = () => {\r\n    const {token} = useContext(AuthContext);\r\n    const {request, loading} = useHttp();\r\n    const [link, setLink] = useState(null);\r\n    const linkId = useParams().id;\r\n    \r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            });\r\n\r\n            setLink(fetched);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, [token, linkId, request]);\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink]);\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !loading && link && <LinkCard link={link} />}\r\n        </div>\r\n    )\r\n};","import React, {useState, useEffect, useContext} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const message = useMessage();\r\n\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, []);\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form});\r\n        } catch (e) {\r\n\r\n        }\r\n    };\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form});\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Сократи Ссылку</h1>\r\n\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n\r\n                        <div className=\"inputs\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.email}\r\n                                    onChange={ changeHandler }\r\n                                />\r\n\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.password}\r\n                                    onChange={ changeHandler }\r\n                                />\r\n\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{marginRight: 10}}\r\n                            onClick={loginHandler}\r\n                            disabled={loading}\r\n                        >Войти\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn grey lighten-1 black-text\"\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Регистрация\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import {useCallback} from 'react';\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text})\r\n        }\r\n    }, [])\r\n};","import {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n\r\n        setReady(true);\r\n    }, [login]);\r\n\r\n    return {login, logout, token, userId, ready}\r\n\r\n};","import React, {useContext} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const logoutHandler = (event) => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem'}}>\r\n                <span className=\"brand-logo\">Сокращение ссылок</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n                    <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n                    <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Loader} from \"./components/Loader\";\nimport 'materialize-css'\n\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth();\n    const isAuthenticated = !!token;\n\n    const routes = useRoutes(isAuthenticated);\n\n    if (!ready) {\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated\n        }}>\n            <Router>\n                { isAuthenticated && <Navbar/> }\n                <div className=\"container\">\n                    { routes }\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from \"./pages/LinksPage\";\r\nimport {CreatePage} from \"./pages/CreatePage\";\r\nimport {DetailsPage} from \"./pages/DetailsPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\" exact>\r\n                    <DetailsPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    )\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}